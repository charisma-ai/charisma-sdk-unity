using System;
using System.Collections.Generic;
using Newtonsoft.Json;

namespace CharismaSDK.Events
{
    public enum MessageType
    {
        character,
        media,
        panel
    }

    public class MessageEvent
    {
        /// <summary>
        /// Message generated by Charisma.
        /// </summary>
        [JsonConstructor]
        public MessageEvent(int conversationId, MessageType type, Message message, bool endStory,
            bool tapToContinue, Emotions[] emotions, Memory[] memories, string eventId, ulong timestamp,
            Impacts impacts)
        {
            this.ConversationId = conversationId;
            this.MessageType = type;
            this.Message = message;
            this.EndStory = endStory;
            this.TapToContinue = tapToContinue;
            this.Emotions = emotions;
            this.Memories = memories;
            this.EventId = long.Parse(eventId);
            this.Timestamp = timestamp;
        }

        /// <summary>
        /// The conversation id of the message.
        /// </summary>
        public int ConversationId { get; }

        /// <summary>
        /// The type of this message.
        /// </summary>
        public MessageType MessageType { get; }

        /// <summary>
        /// Contents of the message.
        /// </summary>
        public Message Message { get; }

        /// <summary>
        /// True if the node this message was generated from has "End Story" activated.
        /// </summary>
        public bool EndStory { get; }

        /// <summary>
        /// True if the node this message was generated from has "Tap To Continue" activated.
        /// </summary>
        public bool TapToContinue { get; }

        /// <summary>
        /// List of emotions that have changed since the last emitted node.
        /// </summary>
        public Emotion[] Emotions { get; }

        /// <summary>
        /// List of memories that have changed since the last emitted node.
        /// </summary>
        public Memory[] Memories { get; }

        public long EventId { get; }
        public ulong Timestamp { get; }
    }

    public class Impacts
    {
        [JsonConstructor]
        public Impacts(int[] id, string impact)
        {
            Id = id;
            Impact = impact;
        }

        public int[] Id { get; }
        public string Impact { get; }
    }

    /// <summary>
    /// Contains data related to a characters response such as, text, audio etc.
    /// </summary>
    public class Message
    {
        [JsonConstructor]
        public Message(string text, Character character, Speech speech,
            Dictionary<string, string> metadata)
        {
            this.Character = character;
            this.Text = text;
            this.Speech = speech;
            this.Metadata = metadata;
        }

        /// <summary>
        /// The text of the response.
        /// </summary>
        public string Text { get; }

        /// <summary>
        /// The character that spoke / said something.
        /// </summary>
        public Character Character { get; }

        /// <summary>
        /// The audio information generated by the speech on this node
        /// </summary>
        public Speech Speech { get; }

        /// <summary>
        /// Metadata attached to this node.
        /// </summary>
        public Dictionary<string, string> Metadata { get; }
    }

    public class Character
    {
        [JsonConstructor]
        public Character(int id, string name, string avatar)
        {
            this.Id = id;
            this.Name = name;
            this.Avatar = avatar;
        }

        /// <summary>
        /// Id of this character.
        /// </summary>
        public int Id { get; }

        public string Name { get; }

        /// <summary>
        /// Url string of this characters avatar.
        /// </summary>
        public string Avatar { get; }
    }

    [Serializable]
    public class Memory
    {
        public string memoryRecallValue;
        public string saveValue;

        private readonly int _id;

        [JsonConstructor]
        public Memory(int id, string recallValue, string saveValue)
        {
            this._id = id;
            this.memoryRecallValue = recallValue;
            this.saveValue = saveValue;
        }

        /// <summary>
        /// Id of this memory
        /// </summary>
        public int Id => _id;

        /// <summary>
        /// Recall value of this memory
        /// </summary>
        public string MemoryRecallValue => memoryRecallValue;

        /// <summary>
        /// Save value of this memory
        /// </summary>
        public string SaveValue
        {
            get => saveValue;
            set => saveValue = value;
        }
    }

    [Serializable]
    public class Emotion
    {
        public int id { get; set; }
        public string name { get; set; }
        public string avatar { get; set; }
        public float moodPositivity { get; set; }
        public float moodEnergy { get; set; }
        public float playerRelationship { get; set; }

        [JsonConstructor]
        public Emotion(int id, string name, string avatar, float moodPositivity, float moodEnergy, float playerRelationship)
        {
            this.id = id;
            this.name = name;
            this.avatar = avatar;
            this.moodPositivity = moodPositivity;
            this.moodEnergy = moodEnergy;
            this.playerRelationship = playerRelationship;
        }
    }
}
